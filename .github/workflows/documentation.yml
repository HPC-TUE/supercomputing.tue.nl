name: build
on: [push, fork]

permissions:
  contents: write
  id-token: write
  pages: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Testing Python
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12", "3.13"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: pyproject.toml
      - name: Set up build cache
        uses: actions/cache/restore@v4
        with:
          key: mkdocs-${{ matrix.python-version }}-${{ hashfiles('.cache/**') }}
          path: .cache
          restore-keys: mkdocs-${{ matrix.python-version }}-
      - name: Install Python dependencies
        run: pip install -e .
      - name: Build documentation
        run: |
          mkdocs build --clean
          mkdocs --version
      - name: Save build cache
        uses: actions/cache/save@v4
        with:
          key: mkdocs-${{ matrix.python-version }}-${{ hashfiles('.cache/**') }}
          path: .cache

  deploy:
    name: Deploy documentation
    runs-on: ubuntu-latest
    needs: [test]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python runtime
        uses: actions/setup-python@v5
        with:
          python-version: 3.13
          cache: pip
          cache-dependency-path: pyproject.toml
      - name: Set up build cache
        uses: actions/cache/restore@v4
        with:
          key: mkdocs-material-${{ hashfiles('.cache/**') }}
          path: .cache
          restore-keys: mkdocs-material-
      - name: Install Python dependencies
        run: pip install -e .
      - name: Build documentation
        run: |
          mkdocs build --clean
          mkdocs --version
      - name: Upload to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: site
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
      - name: Save build cache
        uses: actions/cache/save@v4
        with:
          key: mkdocs-material-${{ hashfiles('.cache/**') }}
          path: .cache


